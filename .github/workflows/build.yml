name: Build AppImage

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install Linux dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake ninja-build libgtk-3-dev libblkid-dev liblzma-dev libsecret-1-dev libjsoncpp-dev fuse libfuse2 appstream imagemagick gsfonts fonts-urw-base35

    - uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.10.0'

    - name: Install dependencies
      run: |
        flutter pub get
        flutter doctor -v

    - name: Build Linux
      run: flutter build linux --release

    - name: Setup AppDir
      run: |
        # Store original files
        mkdir -p temp_appdir
        cp AppDir/AppRun temp_appdir/
        cp AppDir/usr/share/applications/xenia-launcher.desktop temp_appdir/
        cp AppDir/xenia-launcher.svg temp_appdir/
        
        # Remove existing AppDir
        rm -rf AppDir
        
        # Create fresh AppDir structure
        mkdir -p AppDir/usr/bin
        mkdir -p AppDir/usr/share/applications
        mkdir -p AppDir/usr/share/icons/hicolor/256x256/apps
        
        # Copy Flutter build output
        cp -r build/linux/x64/release/bundle/* AppDir/usr/bin/
        
        # Create desktop file with correct paths
        cat > "AppDir/xenia-launcher.desktop" << 'EOL'
        [Desktop Entry]
        Name=Xenia Launcher
        Comment=A Xenia Emulator Launcher
        Exec=AppRun
        Icon=xenia-launcher
        Type=Application
        Categories=Game;Emulator;
        Terminal=false
        EOL
        
        # Copy desktop file to all required locations
        cp AppDir/xenia-launcher.desktop AppDir/usr/share/applications/
        
        # Restore and copy other files
        cp temp_appdir/AppRun AppDir/
        cp temp_appdir/xenia-launcher.svg AppDir/usr/share/icons/hicolor/256x256/apps/
        cp temp_appdir/xenia-launcher.svg AppDir/
        
        # Convert SVG to PNG for additional icon format without text annotations
        convert AppDir/xenia-launcher.svg -background none -resize 256x256 AppDir/xenia-launcher.png
        
        # Create .DirIcon symlink
        ln -s xenia-launcher.svg AppDir/.DirIcon
        
        # Cleanup temp directory
        rm -rf temp_appdir
        
        # Ensure AppRun is executable
        chmod +x AppDir/AppRun
        
        # Debug output
        echo "=== AppDir contents ==="
        ls -la AppDir/
        echo "=== Desktop file contents ==="
        cat AppDir/xenia-launcher.desktop
        echo "=== AppDir/usr/share/applications contents ==="
        ls -la AppDir/usr/share/applications/

    - name: Download appimagetool
      run: |
        wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
        chmod +x appimagetool-x86_64.AppImage

    - name: Build AppImage
      run: |
        # Extract appimagetool first to avoid FUSE requirement
        ./appimagetool-x86_64.AppImage --appimage-extract
        ARCH=x86_64 ./squashfs-root/AppRun AppDir/
        
    - name: Upload AppImage
      uses: actions/upload-artifact@v3
      with:
        name: Xenia_Launcher-x86_64.AppImage
        path: Xenia_Launcher-x86_64.AppImage

    - name: Get version from tag
      if: startsWith(github.ref, 'refs/tags/')
      id: get_tag_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Get version from commit
      if: ${{ !startsWith(github.ref, 'refs/tags/') }}
      id: get_commit_version
      run: |
        echo "VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: softprops/action-gh-release@v1
      if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')) }}
      with:
        tag_name: ${{ startsWith(github.ref, 'refs/tags/') && steps.get_tag_version.outputs.VERSION || format('build-{0}', steps.get_commit_version.outputs.VERSION) }}
        name: ${{ startsWith(github.ref, 'refs/tags/') && format('Release {0}', steps.get_tag_version.outputs.VERSION) || format('Build {0}', steps.get_commit_version.outputs.VERSION) }}
        files: |
          Xenia_Launcher-x86_64.AppImage
          README.md
        body: |
          ${{ startsWith(github.ref, 'refs/tags/') && format('Release {0}', steps.get_tag_version.outputs.VERSION) || format('Automated build from commit {0}', steps.get_commit_version.outputs.VERSION) }}
          
          ${{ github.event.head_commit.message }}
        draft: false
        prerelease: ${{ !startsWith(github.ref, 'refs/tags/') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
