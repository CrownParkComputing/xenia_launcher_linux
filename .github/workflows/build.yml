name: Build AppImage

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]

jobs:
  version:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/')
    outputs:
      new_version: ${{ steps.version.outputs.new_version }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Get latest tag
        id: get_tag
        run: |
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV
          
      - name: Generate new version
        id: version
        run: |
          latest_version=${LATEST_TAG#v}
          IFS='.' read -ra version_parts <<< "$latest_version"
          ((version_parts[2]++))
          new_version="${version_parts[0]}.${version_parts[1]}.${version_parts[2]}"
          echo "new_version=$new_version" >> $GITHUB_OUTPUT
          
      - name: Update pubspec.yaml version
        run: |
          new_version=${{ steps.version.outputs.new_version }}
          sed -i "s/^version: .*/version: $new_version/" pubspec.yaml
          
      - name: Create and push tag
        run: |
          new_version=${{ steps.version.outputs.new_version }}
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add pubspec.yaml
          git commit -m "Bump version to $new_version"
          git tag -a "v$new_version" -m "Release v$new_version"
          git push origin HEAD:${{ github.ref }} --tags

  build:
    needs: [version]
    if: always()
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install Linux dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake ninja-build libgtk-3-dev libblkid-dev liblzma-dev libsecret-1-dev libjsoncpp-dev

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        cache: true

    - name: Cache pub dependencies
      uses: actions/cache@v3
      with:
        path: ${{ env.PUB_CACHE }}
        key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
        restore-keys: |
          ${{ runner.os }}-pub-

    - name: Install dependencies
      run: flutter pub get
      
    - name: Build Linux
      run: flutter build linux --release

    - name: Setup AppDir
      run: |
        mkdir -p AppDir/usr/bin
        mkdir -p AppDir/usr/share/applications
        mkdir -p AppDir/usr/share/icons/hicolor/256x256/apps
        cp -r build/linux/x64/release/bundle/* AppDir/usr/bin/
        cp AppDir/usr/share/applications/xenia-launcher.desktop AppDir/xenia-launcher.desktop
        cp AppDir/xenia-launcher.svg AppDir/.DirIcon
        chmod +x AppDir/AppRun

    - name: Download appimagetool
      run: |
        wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
        chmod +x appimagetool-x86_64.AppImage

    - name: Build AppImage
      run: |
        ARCH=x86_64 ./appimagetool-x86_64.AppImage AppDir/
        
    - name: Upload AppImage
      uses: actions/upload-artifact@v3
      with:
        name: Xenia_Launcher-x86_64.AppImage
        path: Xenia_Launcher-x86_64.AppImage

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          Xenia_Launcher-x86_64.AppImage
          README.md
        body: |
          Release ${{ github.ref_name }}
          
          Changes in this release:
          ${{ github.event.head_commit.message }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
