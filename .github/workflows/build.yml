name: Build AppImage

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install Linux dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake ninja-build libgtk-3-dev libblkid-dev liblzma-dev libsecret-1-dev libjsoncpp-dev

    - uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.10.0'

    - name: Install dependencies
      run: |
        flutter pub get
        flutter doctor -v

    - name: Build Linux
      run: flutter build linux --release

    - name: Setup AppDir
      run: |
        # Create fresh AppDir
        rm -rf AppDir || true
        mkdir -p AppDir
        
        # Copy existing AppDir structure
        cp -r AppDir/* AppDir/
        
        # Create additional directories if needed
        mkdir -p AppDir/usr/bin
        mkdir -p AppDir/usr/share/applications
        mkdir -p AppDir/usr/share/icons/hicolor/256x256/apps
        
        # Copy Flutter build output
        cp -r build/linux/x64/release/bundle/* AppDir/usr/bin/
        
        # Ensure AppRun is executable
        chmod +x AppDir/AppRun
        
        # Debug output
        echo "AppDir contents:"
        ls -la AppDir/
        echo "AppDir/usr/bin contents:"
        ls -la AppDir/usr/bin/
        echo "AppDir/usr/share/applications contents:"
        ls -la AppDir/usr/share/applications/

    - name: Download appimagetool
      run: |
        wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
        chmod +x appimagetool-x86_64.AppImage

    - name: Build AppImage
      run: |
        ARCH=x86_64 ./appimagetool-x86_64.AppImage AppDir/
        
    - name: Upload AppImage
      uses: actions/upload-artifact@v3
      with:
        name: Xenia_Launcher-x86_64.AppImage
        path: Xenia_Launcher-x86_64.AppImage

    - name: Get version
      if: startsWith(github.ref, 'refs/tags/')
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          Xenia_Launcher-x86_64.AppImage
          README.md
        body: |
          Release ${{ steps.get_version.outputs.VERSION }}
          
          Changes in this release:
          ${{ github.event.head_commit.message }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
